parameters:
- name: Environment
  type: string
  default: "EnvironmentParameter"
# - name: VariableGroup
  # type: string
  # default: "VariableGroup"

jobs:
  - deployment: ReleaseTo${{parameters.environment}}
    environment: ${{parameters.environment}}
    # variables:
    # - group: ${{parameters.VariableGroup}}
    strategy:
      runOnce:    
        deploy:
          steps:
          - download: current
            artifact: 'python_library'
          - task: UsePythonVersion@0
            displayName: 'Use Python 3.7'
            inputs:
              versionSpec: 3.7
          # Install required Python modules.
          - task: CmdLine@2 
            displayName: 'Load Python Dependencies'
            inputs:
              script: pip3 install databricks-cli
          # Configure databricks cli
          - task: CmdLine@2
            displayName: 'Configure databricks cli'
            inputs: 
              script: |
                databricks configure --token <<EOF
                https://adb-4885809453486256.16.azuredatabricks.net/
                dapi254bc815c52e8574d24b1402a381cca0-2
                EOF
          # Use databricks-cli to export marlinkpy 
          - task: CmdLine@2
            displayName: 'Export marlinkpy library to Azure Databricks'
            inputs: 
              script: |
                databricks fs cp $(Pipeline.Workspace)/python_library/dist/marlinkpy-0.1.1-py3-none-any.whl dbfs:/FileStore/jars/marlinkpy-0.1.1-py3-none-any.whl --overwrite
          # Use databricks-cli to export marlinkpy 
          - task: CmdLine@2
            displayName: 'Install marlinkpy library on cluster'
            inputs: 
              script: |
                CLUSTER_OBJ=$(databricks clusters list --output JSON)
                CLUSTER_NAME=$(echo "test-cluster" | tr [:upper:] [:lower:])
                CLUSTER_ID=$(echo $CLUSTER_OBJ | jq -r ".clusters[] | select(.cluster_name==\"$CLUSTER_NAME\") | .cluster_id")
                {
                databricks libraries install --cluster-id $CLUSTER_ID --whl dbfs:/FileStore/jars/marlinkpy-0.1.1-py3-none-any.whl
                } || { 
                databricks clusters start --cluster-id $CLUSTER_ID
                sleep 5m
                databricks libraries install --cluster-id $CLUSTER_ID --whl dbfs:/FileStore/jars/marlinkpy-0.1.1-py3-none-any.whl
                }
          # Use databricks-cli to import open source libraries
          - task: CmdLine@2
            displayName: 'Install other libraries and packages'
            inputs: 
              script: |
                CLUSTER_OBJ=$(databricks clusters list --output JSON)
                CLUSTER_NAME=$(echo "test-cluster" | tr [:upper:] [:lower:])
                CLUSTER_ID=$(echo $CLUSTER_OBJ | jq -r ".clusters[] | select(.cluster_name==\"$CLUSTER_NAME\") | .cluster_id")
                databricks libraries install --cluster-id $CLUSTER_ID --pypi-package "xlrd==1.1.0"
          # restart cluster
          - task: CmdLine@2
            displayName: 'Restart cluster'
            inputs: 
              script: |
                CLUSTER_OBJ=$(databricks clusters list --output JSON)
                CLUSTER_NAME=$(echo "test-cluster" | tr [:upper:] [:lower:])
                CLUSTER_ID=$(echo $CLUSTER_OBJ | jq -r ".clusters[] | select(.cluster_name==\"$CLUSTER_NAME\") | .cluster_id")
                databricks clusters restart --cluster-id $CLUSTER_ID
    # strategy:
    #   runOnce:    
    #     deploy:
    #       steps:
    #       - download: current
    #         artifact: 'marlinkpy'
    #       - task: UsePythonVersion@0
    #         displayName: 'Use Python 3.7'
    #         inputs:
    #           versionSpec: 3.7
    #       # Install required Python modules.
    #       - task: CmdLine@2 
    #         displayName: 'Load Python Dependencies'
    #         inputs:
    #           script: pip3 install databricks-cli
    #       # Configure databricks cli
    #       - task: CmdLine@2
    #         displayName: 'Configure databricks cli'
    #         inputs: 
    #           script: |
    #             databricks configure --token <<EOF
    #             https://adb-4885809453486256.16.azuredatabricks.net/
    #             dapi254bc815c52e8574d24b1402a381cca0-2
    #             EOF
    #       # Use databricks-cli to export marlinkpy 
    #       - task: CmdLine@2
    #         displayName: 'Export marlinkpy library to Azure Databricks'
    #         inputs: 
    #           script: |
    #             databricks fs cp $(Pipeline.Workspace)/marlinkpy/dist/marlinkpy-0.1.1-py3-none-any.whl dbfs:/FileStore/jars/marlinkpy-0.1.1-py3-none-any.whl --overwrite
    #       # Use databricks-cli to export marlinkpy 
    #       - task: CmdLine@2
    #         displayName: 'Install library on cluster'
    #         inputs: 
    #           script: |
    #             CLUSTER_OBJ=$(databricks clusters list --output JSON)
    #             CLUSTER_NAME=$(echo "test-cluster" | tr [:upper:] [:lower:])
    #             CLUSTER_ID=$(echo $CLUSTER_OBJ | jq -r ".clusters[] | select(.cluster_name==\"$CLUSTER_NAME\") | .cluster_id")
    #             databricks clusters restart --cluster-id $CLUSTER_ID